import requests
from bs4 import BeautifulSoup

# Confluence API details
base_url = "https://<confluence-domain>.com/wiki"
api_url = f"{base_url}/rest/api/content"
page_id = "<your-confluence-page-id>"
auth = ('<username>', '<api_token>')  # For basic auth with API token

def get_confluence_page(page_id):
    # Get page content from Confluence
    url = f"{api_url}/{page_id}?expand=body.view"
    response = requests.get(url, auth=auth)
    if response.status_code == 200:
        page_data = response.json()
        page_html = page_data['body']['view']['value']
        return page_html
    else:
        print("Failed to fetch the page:", response.status_code)
        return None

# Parse the Confluence page HTML
def parse_page_content(html_content):
    soup = BeautifulSoup(html_content, 'html.parser')
    text_content = soup.get_text(separator="\n")
    return text_content

page_html = get_confluence_page(page_id)
if page_html:
    page_text = parse_page_content(page_html)
    print(page_text)
import openai

# Initialize OpenAI API key
openai.api_key = "<your-openai-api-key>"

# Query the LLM model
def ask_llm(content, question):
    response = openai.Completion.create(
        engine="text-davinci-003",  # Or another model like gpt-3.5-turbo
        prompt=f"{content}\n\nQuestion: {question}",
        max_tokens=150,
        temperature=0.5
    )
    return response.choices[0].text.strip()

# Example of querying insights from the Confluence content
question = "What are the key points mentioned in the page?"
response = ask_llm(page_text, question)
print("Response from LLM:", response)
